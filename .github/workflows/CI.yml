name: Windows Cross Compiled

on:
  push:
    branches-ignore:
      - 'dependabot/**'

  workflow_dispatch:

jobs:
  build_targets:
    name: Build target-variant image
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target: [win64]
        variant: [nonfree]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create and Boot docker-container Driver
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [worker.oci]
            max-parallelism = 2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Generate Dockerfile
        run: ./generate.sh ${{ matrix.target }} ${{ matrix.variant }}

      - name: Image Name
        id: imagename
        run: |
          IMG="ghcr.io/${GITHUB_ACTOR,,}/${{ matrix.target }}-${{ matrix.variant }}"
          echo "image=${IMG/ /-}:latest" >> $GITHUB_OUTPUT
          echo "cache=${IMG/ /-}:cache" >> $GITHUB_OUTPUT

      - name: Build variant image
        uses: docker/build-push-action@v5
        with:
          context: .
          outputs: type=registry,oci-mediatypes=true,compression=zstd,compression-level=7
          cache-from: type=registry,ref=${{ steps.imagename.outputs.cache }}
          cache-to: type=registry,ref=${{ steps.imagename.outputs.cache }},mode=max,oci-mediatypes=true,compression=zstd,compression-level=7
          tags: ${{ steps.imagename.outputs.image }}
          provenance: false

  build_ffmpeg:
    name: Build ffmpeg
    needs: build_targets
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target: [win64]
        variant: [nonfree]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build ffmpeg
        run: ./build.sh ${{ matrix.target }} ${{ matrix.variant }}

      - name: Artifact name
        id: dicitur
        run: |
          REF="${{ matrix.target }}-${{ matrix.variant }}"
          echo "arte_factum=${REF// /-}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-${{ steps.dicitur.outputs.arte_factum }}
          path: artifacts/
          retention-days: 1
